name: Release Fleet against test Rancher charts repo
on:
  workflow_dispatch:
    inputs:
      ref:
        description: "Branch to use for GitHub action workflow"
        required: true
        default: "master"
      charts_base_branch:
        description: "Use the following rancher/charts branch as a base (e.g. dev-v2.7)"
        required: true
        default: "dev-v2.8"
      charts_repo:
        description: "Push to the following Rancher charts repo (which must exist)"
        required: true
        default: "rancher/fleet-test-data"
      charts_target_branch:
        description: "Use the following branch as a destination when pushing to the charts repo"
      prev_fleet:
        description: "Previous Fleet version (e.g. 0.6.0-rc.3)"
        required: true
        default: ""
      new_fleet:
        description: "New Fleet version"
        required: true
        default: ""
      prev_chart:
        description: "Previous Rancher Chart version (e.g. 101.1.0)"
        required: true
        default: ""
      new_chart:
        description: "New Rancher Chart version"
        required: true
        default: ""
      should_replace:
        description: "Should the old Fleet version be replaced/removed? (e.g. true in case of release candidate bumps)"
        required: true
        default: "true"

jobs:
  create-rancher-charts-pr:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout rancher/fleet
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{github.event.inputs.ref}}
          path: fleet

      - name: Checkout test charts repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          repository: ${{github.event.inputs.charts_repo}}
          path: charts

      - name: Compute target branch name
        run: |
          target_branch_name=${{github.event.inputs.charts_target_branch}}

          if [ ${{github.event_name}} = 'pull_request' ]; then
            target_branch_name=${{github.event.pull_request.head.ref}}
          elif [ -z ${{github.event.inputs.charts_target_branch}} ]; then
            target_branch_name=${{github.event.inputs.charts_base_branch}}-$(date +%Y%m%d%H%M%S)
          fi

          echo "target_branch=$target_branch_name" >> "$GITHUB_ENV"

      - name: Set up test charts repo with latest upstream state
        run: |
          cd charts
          # Add upstream remote and fetch from it
          git remote add -f upstream https://github.com/rancher/charts

          git checkout -b $target_branch upstream/${{github.event.inputs.charts_base_branch}}
          if [ $? -eq 128 ]; then # branch already exists
            git checkout $target_branch
            git rebase upstream/${{github.event.inputs.charts_base_branch}}
          fi

      - name: Install dependencies
        run: sudo snap install yq --channel=v4/stable

      - name: Run release script
        run: ./fleet/.github/scripts/release-against-charts.sh ${{github.event.inputs.prev_fleet}} ${{github.event.inputs.new_fleet}} ${{github.event.inputs.prev_chart}}  ${{github.event.inputs.new_chart}}  ${{github.event.inputs.should_replace}}

      - name: Push to custom branch
        run: |
          cd charts
          git push origin $target_branch
